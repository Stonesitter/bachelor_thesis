"0",""
"0","# Erzeugen von Vorhersagedaten über den Bereich der Daten"
"0","x_range <- seq(min(merged_data$MMM_S_Index, na.rm = TRUE), max(merged_data$MMM_S_Index, na.rm = TRUE), length.out = 100)"
"0",""
"0","# Berechnen der Vorhersagen für das vollständige Modell und das bereinigte Modell"
"0","pred_full <- predict(model_poly, newdata = data.frame(MMM_S_Index = x_range), type = ""response"")"
"0","pred_clean <- predict(model_clean, newdata = data.frame(MMM_S_Index = x_range), type = ""response"")"
"0",""
"0",""
"0","# Daten temporär kombinieren und Typen zuweisen"
"0","plot_data <- rbind("
"0","  mutate(merged_data, Type = 'Bereinigte Daten'),"
"0","  mutate(outliers_data, Type = 'Ausreißer')"
"0",")"
"0",""
"0","# Vorhersagekurven als separate DataFrames"
"0","pred_data_full <- data.frame(MMM_S_Index = x_range, Total_Correct = pred_full, Type = 'Vollständiges Modell')"
"0","pred_data_clean <- data.frame(MMM_S_Index = x_range, Total_Correct = pred_clean, Type = 'Bereinigtes Modell')"
"0",""
"0","# ggplot2 Scatterplot mit Vorhersagekurven"
"0","ggplot(data = plot_data, aes(x = MMM_S_Index, y = total_correct)) +"
"0","  geom_point(aes(color = Type, shape = Type), size = 3, show.legend = TRUE) +"
"0","  geom_line(data = pred_data_full, aes(x = MMM_S_Index, y = Total_Correct, linetype = Type, color = Type), size = 1) +"
"0","  geom_line(data = pred_data_clean, aes(x = MMM_S_Index, y = Total_Correct, linetype = Type, color = Type), size = 1) +"
"0","  scale_color_manual(values = c('Bereinigte Daten' = 'blue', 'Ausreißer' = 'red', 'Vollständiges Modell' = 'darkblue', 'Bereinigtes Modell' = 'green')) +"
"0","  scale_shape_manual(values = c('Bereinigte Daten' = 19, 'Ausreißer' = 19)) +"
"0","  scale_linetype_manual(values = c('Vollständiges Modell' = 'dashed', 'Bereinigtes Modell' = 'solid')) +"
"0","  labs(title = ""Scatterplot von bereinigten Daten und Ausreißern"", x = ""MMM_S_Index"", y = ""Total Correct"") +"
"0","  theme_minimal() +"
"0","  theme(legend.position = ""right"") +"
"0","  guides(color = guide_legend(title = ""Type""), shape = ""none"", linetype = guide_legend(title = ""Modelle""))"
"0",""
