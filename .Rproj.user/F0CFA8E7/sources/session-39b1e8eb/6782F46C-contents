# Load necessary package
library(dplyr)

# Define a function to calculate perseverative errors
calculate_perseverative_error <- function(df) {
  df <- df %>%
    group_by(jatosStudyResultId) %>%
    arrange(total_responses) %>%
    mutate(
      previous_rule = lag(matching_rule),
      perseverative_error = case_when(
        response != correct_response & !is.na(previous_rule) & (
          (previous_rule == "color" & response_color %in% c(color1, color2, color3, color4) & matching_rule != "color") |
            (previous_rule == "shape" & response_shape %in% c(shape1, shape2, shape3, shape4) & matching_rule != "shape") |
            (previous_rule == "number" & response_number %in% c(number1, number2, number3, number4) & matching_rule != "number")
        ) ~ TRUE,
        TRUE ~ FALSE
      )
    ) %>%
    ungroup()
  
  return(df)
}

# Apply the function to your dataframe
look <- calculate_perseverative_error(look)

# Display the first few rows of the result
print(head(look$perseverative_error, n = 200))

head(look$matching_rule, n = 65)

# Checking other relevant columns
head(look$response_color, n = 65)
head(look$response_shape, n = 65)
head(look$response_number, n = 65)
head(look$color1, n = 65)
head(look$shape1, n = 65)
head(look$number1, n = 65)
# (and similarly for color2, shape2, number2, etc.)

data_filtered <- data_filtered %>%
  mutate(correct = response == correct_response)
