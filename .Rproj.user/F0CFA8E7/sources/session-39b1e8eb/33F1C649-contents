# Calculate previous_rule directly
look <- look %>%
  mutate(previous_rule = lag(matching_rule, default = NA))

# Determine the attributes of the chosen card based on the response
look <- look %>%
  mutate(
    chosen_color = case_when(
      response == "a" ~ color1,
      response == "b" ~ color2,
      response == "c" ~ color3,
      response == "d" ~ color4,
      TRUE ~ NA_character_
    ),
    chosen_shape = case_when(
      response == "a" ~ shape1,
      response == "b" ~ shape2,
      response == "c" ~ shape3,
      response == "d" ~ shape4,
      TRUE ~ NA_character_
    ),
    chosen_number = case_when(
      response == "a" ~ number1,
      response == "b" ~ number2,
      response == "c" ~ number3,
      response == "d" ~ number4,
      TRUE ~ NA_integer_
    )
  )

# Calculate perseverative errors with updated conditions
look <- look %>%
  mutate(
    is_incorrect = response != correct_response,
    has_previous_rule = !is.na(previous_rule),
    color_condition = if_else(!is.na(previous_rule), previous_rule == "color" & matching_rule != "color" & chosen_color == response_color, NA),
    shape_condition = if_else(!is.na(previous_rule), previous_rule == "shape" & matching_rule != "shape" & chosen_shape == response_shape, NA),
    number_condition = if_else(!is.na(previous_rule), previous_rule == "number" & matching_rule != "number" & chosen_number == response_number, NA),
    perseverative_error = case_when(
      has_previous_rule & (color_condition | shape_condition | number_condition) ~ TRUE,
      TRUE ~ FALSE
    )
  )